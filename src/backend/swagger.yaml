# Edit this file live on https://editor.swagger.io/
swagger: "2.0"
info:
  title: "Selfshare Backend API"
  description: "This documentation contains all REST endpoints of the selfshare application backend."
  version: "1.0"
host: "localhost:3000"
tags:
  - name: "General"
    description: "All major information is displayed here"
  - name: "About"
    description: "Biography and personal information of the author"
  - name: "Disclaimer"
    description: "Disclaimer and legal information"
  - name: "Security"
    description: "Security and API authentication"
  - name: "Gallery"
    description: "Gallery information and meta data"
  - name: "Image"
    description: "Image information and meta data"

paths:
  /general:
    get:
      tags:
        - "General"
      summary: "Get site title, description and theme"
      description: "All information about the site itself is stored here"
      operationId: "getGeneralInfos"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      responses:
        200:
          description: "General object of the site information"
          schema:
            $ref: "#/definitions/General"
    put:
      tags:
        - "General"
      summary: "Update site title, description and theme"
      description: "All information about the site itself is stored here"
      operationId: "updateGeneralInfos"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "General object"
          required: true
          schema:
            $ref: "#/definitions/General"
      responses:
        200:
          description: "Successful update"
        500:
          description: "Invalid input"

  /about:
    get:
      tags:
        - "About"
      summary: "Get information about the author"
      description: "Everything the author wrote about themselves including their profile picture"
      operationId: "getAboutInfos"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      responses:
        200:
          description: "About object of the author information"
          schema:
            $ref: "#/definitions/About"
    put:
      tags:
        - "About"
      summary: "Update information about the author"
      description: "Everything the author wrote about themselves including their profile picture"
      operationId: "updateAboutInfos"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "About object"
          required: true
          schema:
            $ref: "#/definitions/About"
      responses:
        200:
          description: "Successful update"
        500:
          description: "Invalid input"

  /disclaimer:
    get:
      tags:
        - "Disclaimer"
      summary: "Get sites legal information disclaimer"
      description: "Legal information on images, private use, licenses and contact information"
      operationId: "getDisclaimerInfos"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      responses:
        200:
          description: "Response object with the disclaimer string in its body"
          schema:
            $ref: "#/definitions/Response"
    put:
      tags:
        - "Disclaimer"
      summary: "Update sites legal information disclaimer"
      description: "Legal information on images, private use, licenses and contact information"
      operationId: "updateDisclaimerInfos"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Response object"
          required: true
          schema:
            $ref: "#/definitions/Response"
      responses:
        200:
          description: "Successful update"
        500:
          description: "Invalid input"

  /security/login:
    get:
      tags:
        - "Security"
      summary: "Get the admins login hash data"
      description: "Checks the username and password, returns generated login hash on success"
      operationId: "loginAndGetHash"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      responses:
        200:
          description: "Response object with the login hash"
          schema:
            $ref: "#/definitions/Response"
        403:
          description: "Forbidden access"

  /security/auth:
    get:
      tags:
        - "Security"
      summary: "Get the admins authentication information"
      description: "Checks the login hash from client"
      operationId: "authenticate"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      responses:
        200:
          description: "Response object with the login hash"
          schema:
            $ref: "#/definitions/Response"
        403:
          description: "Forbidden access"
        500:
          description: "Invalid input"

  /security/setup:
    get:
      tags:
        - "Security"
      summary: "Setup availability check"
      description: "Checks if the admin setup has already been done before, since it can only be done once"
      operationId: "isSetupAvailable"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      responses:
        200:
          description: "Response object with boolean value"
          schema:
            $ref: "#/definitions/Response"

  /security:
    put:
      tags:
        - "Security"
      summary: "Update the admins login information"
      description: "The server has a single admin account which can be updated with this"
      operationId: "updateSecurityInfo"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Security object"
          required: true
          schema:
            $ref: "#/definitions/Security"
      responses:
        200:
          description: "Successful update"
        500:
          description: "Invalid input"

  /gallery/m:
    get:
      tags:
        - "Gallery"
      summary: "Get all medium sized gallery preview images"
      description: "The square preview images have a dimension of 350x350 px"
      operationId: "getAllGalleriesMedium"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      responses:
        200:
          description: "JSON array of Gallery Object"
          schema:
            $ref: "#/definitions/Gallery"

  /gallery/s:
    get:
      tags:
        - "Gallery"
      summary: "Get all small sized gallery preview images"
      description: "The square preview images have a dimension of 25x25 px"
      operationId: "getAllGalleriesSmall"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      responses:
        200:
          description: "JSON array of Gallery Object"
          schema:
            $ref: "#/definitions/Gallery"

  /gallery/info/{title}:
    get:
      tags:
        - "Gallery"
      summary: "Get gallery by its title"
      description: "Returns a gallery object matching the provided title"
      operationId: "getGalleryByTitle"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      responses:
        200:
          description: "Gallery Object"
          schema:
            $ref: "#/definitions/Gallery"

  /gallery:
    post:
      tags:
        - "Gallery"
      summary: "Add new gallery"
      description: "Creates a new gallery row in the database"
      operationId: "addGallery"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Gallery object"
          required: true
          schema:
            $ref: "#/definitions/Gallery"
      responses:
        200:
          description: "Successful operation"
        500:
          description: "Invalid input"

  /gallery/thumbnail/{id}:
    put:
      tags:
        - "Gallery"
      summary: "Update a galleries thumbnail"
      description: "Find a gallery by its ID and update the thumbnail"
      operationId: "setGalleryThumbnailById"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Image object"
          required: true
          schema:
            $ref: "#/definitions/Image"
      responses:
        200:
          description: "Successful update"
        500:
          description: "Invalid input"

  /gallery/{id}:
    put:
      tags:
        - "Gallery"
      summary: "Update a gallery by ID"
      description: "Find a gallery by its ID and update the information"
      operationId: "updateGalleryById"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Gallery object"
          required: true
          schema:
            $ref: "#/definitions/Gallery"
      responses:
        200:
          description: "Successful update"
        500:
          description: "Invalid input"
    delete:
      tags:
        - "Gallery"
      summary: "Remove a gallery by ID"
      description: "Find a gallery by its ID and remove it from the database"
      operationId: "deleteGalleryById"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      responses:
        200:
          description: "Gallery Object"
          schema:
            $ref: "#/definitions/Gallery"

  /image/l/{id}:
    get:
      tags:
        - "Image"
      summary: "Get large image by ID"
      description: "Find an image by its ID and get the full sized image data from the database"
      operationId: "getImageById"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      responses:
        200:
          description: "Image Object"
          schema:
            $ref: "#/definitions/Image"


  /image/m/{id}:
    get:
      tags:
        - "Image"
      summary: "Get medium image by ID"
      description: "Find an image by its ID and get the 350x350 px preview image data from the database"
      operationId: "getMediumImagesByGalleryId"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      responses:
        200:
          description: "Image Object"
          schema:
            $ref: "#/definitions/Image"

  /image/s/{id}:
    get:
      tags:
        - "Image"
      summary: "Get small image by ID"
      description: "Find an image by its ID and get the 25x25 px preview image data from the database"
      operationId: "getSmallImagesByGalleryId"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      responses:
        200:
          description: "Image Object"
          schema:
            $ref: "#/definitions/Image"

  /image:
    post:
      tags:
        - "Image"
      summary: "Add new image"
      description: "Creates a new image row in the database"
      operationId: "uploadImageToGallery"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Image object"
          required: true
          schema:
            $ref: "#/definitions/Image"
      responses:
        200:
          description: "Successful operation"
        500:
          description: "Invalid input"

  /image/{id}:
    put:
      tags:
        - "Image"
      summary: "Update an image"
      description: "Find an image by its ID and update the information"
      operationId: "updateImageById"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Image object"
          required: true
          schema:
            $ref: "#/definitions/Image"
      responses:
        200:
          description: "Successful update"
        500:
          description: "Invalid input"
    delete:
      tags:
        - "Image"
      summary: "Remove an image"
      description: "Find an image by its ID and remove it from the database"
      operationId: "deleteImageById"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      responses:
        200:
          description: "Image Object"
          schema:
            $ref: "#/definitions/Image"
definitions:
  General:
    type: "object"
    properties:
      title:
        type: "string"
      description:
        type: "string"
      theme:
        type: "string"
  About:
    type: "object"
    properties:
      name:
        type: "string"
      description:
        type: "string"
      picture:
        type: "string"
      email:
        type: "string"
  Response:
    type: "object"
    properties:
      code:
        type: "number"
      body:
        type: "string"
  Security:
    type: "object"
    properties:
      username:
        type: "string"
      password:
        type: "string"
  Gallery:
    type: "object"
    properties:
      gallery_id:
        type: "number"
      title:
        type: "string"
      description:
        type: "string"
      order_nr:
        type: "number"
      base64_medium:
        type: "string"
      base64_small:
        type: "string"
  Image:
    type: "object"
    properties:
      image_id:
        type: number
      gallery_id:
        type: number
      title:
        type: "string"
      description:
        type: "string"
      upload_timestamp:
        type: "number"
      base64_large:
        type: "string"
      base64_medium:
        type: "string"
      base64_small:
        type: "string"
      order_nr:
        type: "number"

externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"